#!/bin/fish

## CONFIGURATION

# Set bot dir location
set botdir $HOME/code/punyama

# Set config dir location
set configdir $botdir/config

# Set bot nick
set botnick punyama

# Set bot pass
set botpass derpaderp1

# Set server
set server irc.rizon.net

# Set colors (term)
#fg="\e[0;39m"
#c1="\e[1;33m"
#c2="\e[1;30m"


## FUCNTIONS

# This function starts ii and sets some variables
function startii
	# TODO: bg this (FUCK YOU FISH)
	if test -z (pgrep \^ii\$)
		echo -e "Starting ii.\n"
		ii -i $botdir/ii -s $server -n $botnick &
	end

	# Set server in path
	set -g serverin $botdir/ii/$server/in
end

# This function makes the bot join channels
function join
	# Msg NickServ
	echo IDENTIFY $botpass > $botdir/ii/$server/nickserv/in
	sleep 1

	set channels (cat $configdir/channels)

	for channel in $channels
		echo -e "Joining $channel."
		mkdir -p $botdir/ii/$server/$channel
		echo "/j $channel" > $serverin

		# Set channel out path
		set -g out $out $botdir/ii/$server/$channel/out
	end
	echo
end

# This function is used to skip admin command
function admin
	if test -z (grep \^$nick\$ $configdir/admin)
		echoii "Check your privilege~"
		return 1
	else
		return 0
	end
end

# This function is used to skip disabled commands
function truefalse
	# Load truefalse file
	# TODO: Create file if not found
	source $configdir/truefalse/$activechannel

	# Ignore command if disabled
	if test $argv[1]
		if test $$argv[1] = false
			return 1
		else
			return 0
		end
	end
end

# This function echoes to ii
# TODO: Add colors
function echoii
	echo -e â€‹$argv > $botdir/ii/$server/$activechannel/in

	echo "<$nick@$activechannel> $msg"
	# TODO: Make this support multi line stuff
	echo "-> $argv"
end


## EXECUTE

startii
join

# Set colors (irc)
set fgii \x03
set c1ii \x034
set c2ii \x033

tail -f -v -n 1 $out | \
while read date time nick msg
	# Check channel
	if test $date = "==>"
		set activechannel (echo $time | rev | cut -d / -f 2 | rev)

		continue
	end

	# Fix nicks
	set nick (echo $nick | tr -d \< | tr -d \>)

	# Ignore nicks
	if test (grep \^$nick\$ $configdir/ignore)
		continue
	end

	# Website title
	if test (echo $msg | grep "http://\|https://")
		truefalse http ; or continue

		set url (echo $msg | grep -o -P "http(s?):\/\/[^ \"\(\)\<\>]*")
		set title (curl -L -s $url | grep -i -P -o "(?<=<title>)(.*)(?=</title>)" | perl -MHTML::Entities -pe 'decode_entities($_);')

		if test $title
			if test (echo $msg $title | grep -i "/b/\|/hm/\|/gif/\|anal\|dildo\|gore\|hentai\|lewd\|nude\|nsfw\|penis\|porn\|pussy\|sex\|vagina\|yaoi\|yuri")
				echoii "["$c1ii"NSFW$fgii] $title"
			else
				echoii $title
			end
		end

		continue
	end

	# sed
	if test (echo $msg | grep "^s/.*/.*/")
		truefalse sed ; or continue

		if test (echo $msg | grep -o "^s/.*/.*/...*")
			set before (echo $msg | cut -d / -f 2)
			set after (echo $msg | cut -d / -f 3)
			set nick (echo $msg | cut -d / -f 4)

			set match (tac $botdir/ii/$server/$activechannel/out | cut -d \n -f 2- | grep ":[0-9][0-9] <$nick>" | cut -d \  -f 4- | grep -v ":[0-9][0-9] <$botnick>" | grep $before | head -n 1)

			if test (echo $match | grep -o $before)
				set fix (echo $match | sed "s/$before/$after/g")
			else
				continue
			end
		else
			set before (echo $msg | cut -d / -f 2)
			set after (echo $msg | cut -d / -f 3)
			set target (echo $msg | cut -d / -f 4)

			set match (tac $botdir/ii/$server/$activechannel/out | cut -d \n -f 2- | grep ":[0-9][0-9] <$nick>" | cut -d \  -f 4- | grep -v ":[0-9][0-9] <$botnick>" | grep $before | head -n 1)

			if test (echo $match | grep $before)
				set fix (echo $match | sed "s/$before/$after/$target")
			else
				continue
			end
		end

		if test $fix
			if test (echo $fix | wc -m) -le (math (echo $msg | wc -m) + 20) -o (echo $fix | wc -m) -ge (math (echo $msg | wc -m) + 20)
				echoii "<$nick> $fix"
			else
				echoii "Don't abuse me pls~"
			end
		end

		continue
	end

	# Feels
	# TODO: Fix empty feels
	if test (echo $msg | grep "^tfw *\|^>tfw *")
		if test (echo $msg | grep "^tfw *")
			set msg \>$msg
		end
		
		echo "3$msg" >> $configdir/random/feel
	
		continue
	end

	# Check if command
	if test (echo $msg | grep "^.*")
		switch $msg

			## ADMIN COMMANDS

			# Execute commands
			# TODO: This doesn't really work
			case ".fish *"
				admin ; or continue

				set query (echo $msg | cut -d \  -f 2)

				echoii (fish -c "$query")

			# Disable commands
			case ".false *"
				admin ; or continue
				truefalse

				set query (echo $msg | cut -d \  -f 2)

				if test $$query = true
					sed -i "s/^set -g $query true/set -g $query false/" "$configdir/truefalse/$activechannel"
					echoii "Command '$query' is now set to false~"
				else if test $$query = false
					echoii "Command '$query' is already set to false~"
				else
					echoii "Command '$query' does not exist~"
				end

			# Enable commands
			case ".true *"
				admin ; or continue
				truefalse

				set query (echo $msg | cut -d \  -f 2)

				if test $$query = false
					sed -i "s/^set -g $query false/set -g $query true/" "$configdir/truefalse/$activechannel"
					echoii "Command '$query' is now set to true~"
				else if test $$query = true
					echoii "Command '$query' is already set to true~"
				else
					echoii "Command '$query' does not exist~"
				end

			# Ignore nicks
			case ".ignore *"
				admin ; or continue

				set query (echo $msg | cut -d \  -f 2)

				if test -z (cat $configdir/ignore | grep ^$query\$)
					echo "$query" >> $configdir/ignore
					echoii "Ignoring $query~"
				else
					echoii "$query is already being ignored~"
				end

			# Unignore nicks
			case ".unignore *"
				admin ; or continue

				set query (echo $msg | cut -d \  -f 2)

				if test (cat $configdir/ignore | grep ^$query\$)
					sed -i "/^$query\$/d" $configdir/ignore
					echoii "Unignoring $query~"
				else
					echoii "$query is not being ignored already~"
				end


			# List commands
			case .list
				echoii (cat $configdir/truefalse/$activechannel | sed "s/set -g //g" | sed s/\$/,/g | tr \n \ | rev | sed s/,/./1 | rev)


			## ABOUT & HELP COMMANDS

			# Display some about info
			case .about
				set hostname (hostname)
				set crux (crux)
				if test -z $crux
					set distro (grep PRETTY_NAME /etc/*-release | cut -d \" -f 2)
				else
					set distro $crux
				end

				echoii "Hosted by $USER@$hostname, running $distro~"
				echoii https://github.com/onodera-punpun/punyama

			# Bots message
			case .bots
				echoii "All hail to the dear leader~ [fish]"

			# Send source link
			case .source
				echoii https://github.com/onodera-punpun/punyama


			## FUN COMMANDS

			# Ded message
			case .ded
				truefalse ded ; or continue

				echoii "I'm still here~"

			case .korea
				truefalse korea ; or continue

				echoii "https://youtu.be/FJROtStUIFs"

			# Ping message
			case .ping
				truefalse ping ; or continue

				echoii pong~

			# Get r8ed m8
			case .r8
				truefalse r8

				echoii (r8)

			# Random message
			case ".random *"
				truefalse random ; or continue

				set query (echo $msg | cut -d \  -f 2)

				switch $query
					case feel keynpeele mega64 nasheed nichijou onion wkuk
						echoii (cat $configdir/random/$query | shuf -n 1)
						
					case quote
						set query (echo $msg | cut -d \  -f 3)
						if test -z $query
							set query $nick
						end

						set result (cat $botdir/ii/$server/$activechannel/out | grep ":[0-9][0-9] <$query>" | shuf -n 1 | cut -d \  -f 3-)

						if test $result
							echoii $result
						else
							echoii "$query hasn't said anything in this channel~"
						end
						
					case "*"
						echoii "Please choose one of the following subjects: 'feel' 'keynpeele' 'mega64' 'nasheed' 'nichijou' 'onion' 'wkuk' 'quote'~"
				end

			# Spurdo
			case ".spurdo *" .spurdo
				truefalse spurdo ; or continue

				if test (echo $msg | wc -w) -eq 1
					set fix (tac $botdir/ii/$server/$activechannel/out | cut -d \n -f 2- | grep ":[0-9][0-9] <$nick>" | cut -d \  -f 4- | head -n 1 | spurdo)
				else if test (echo $msg | wc -w) -eq 2
					set fix (tac $botdir/ii/$server/$activechannel/out | cut -d \n -f 2- | grep ":[0-9][0-9] <"(echo $msg | cut -d \  -f 2)">" | cut -d \  -f 4- | head -n 1 | spurdo)

					if test -z $fix
						set fix (echo $msg | cut -d \  -f 2- | spurdo)
					else
						set nick (echo $msg | cut -d \  -f 2)
					end
			else
					set fix (echo $msg | cut -d \  -f 2- | spurdo)
				end

				echoii "<$nick> $fix XDD"

			# Allahu akbar
			case .takbir
				truefalse takbir ; or continue

				echoii "ALLAHU AKHBAR~"


			## ACTUAL HELPFULL COMMANDS (lol)

			# Grep through history
			case ".grep *"
				truefalse grep ; or continue

				set query (echo $msg | cut -d \  -f 2-)

				set IFS
				set result (grep -v "<$botnick>" $botdir/ii/$server/$activechannel/out | grep -v "\-!\-" | grep -v "> \." | cut -d \  -f 3- | grep -i $query)
				set count (echo $result | wc -l)

				# If more than 3 results, upload, else echo
				if test $count -ge 3
					echo $result > /tmp/grep.txt
					set url (punf -q /tmp/grep.txt)

					echoii "$count results: $url"
				else if test -z $result
					echoii "No results~"
				else
					echoii $result
				end
				set IFS \n\ \t


			## ERRORS

			# Execute command error
			case .fish
				admin ; or continue

				echoii "Please specify a command to execute~"

			# Enable/disable error
			case .true .false 
				admin ; or continue

				echoii "Please specify one of the commands found in .list~"

			# Enable/disable error
			case .ignore .unignore
				admin ; or continue

				echoii "Please specify a nick~"

			# Random error
			case .random
				truefalse random ; or continue

				echoii "Please choose one of the following subjects: 'feel' 'keynpeele' 'mega64' 'nasheed' 'nichijou' 'onion' 'wkuk' 'quote'~"

			# Grep error
			case .grep
				truefalse grep ; or continue

				echoii "Please specify a search term~"
		end
	end
end

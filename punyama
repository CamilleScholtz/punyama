#!/bin/fish

## CONFIGURATION

# Set bot dir location
set botdir $HOME/code/git/punyama

# Set config dir location
set configdir $botdir/configs

# Set colors (term)
#fg="\e[0;39m"
#c1="\e[1;33m"
#c2="\e[1;30m"


## FUCNTIONS

# This function starts ii and sets some variables
function startii
	if test -z (pgrep '^ii$')
		echo -e 'Starting ii.\n'
		ii -i $botdir/ii -s $server -n $botnick &
	end

	# Set server in path
	set -g serverin $botdir/ii/$server/in
end

# This function makes the bot join channels
function join
	# Msg NickServ
	echo "/msg NickServ IDENTIFY $botpass" >$botdir/ii/$server/global/in
	sleep 1

	for channel in (ls $configdir/channels)
		echo -e "Joining $channel."
		mkdir -p $botdir/ii/$server/$channel
		echo "/j $channel" >$serverin

		# Set channel out path
		set -g out $out $botdir/ii/$server/$channel/out
	end

	echo
end

# This function is used to skip disabled commands
function checksetting
	# Load channel file
	source $configdir/channels/$activechannel

	# Ignore command if disabled
	if test $$argv = false
		return 1
	else
		return 0
	end
end

# This function echoes to ii
# TODO: Add colors
function echoii
	echo $argv >$botdir/ii/$server/$activechannel/in

	echo "<$nick@$activechannel> $msg"
	# TODO: Make this support multi line stuff
	echo "-> $argv"
end


## EXECUTE

# Load config
source $configdir/config

# Set colors (irc)
set fgii \x03
set c1ii \x034
set c2ii \x033

# Start ii and join channels
startii
join

tail -f -v -n 1 $out | while read date time nick msg
	# Check channel
	if test $date = '==>'
		set activechannel (echo $time | rev | cut -d '/' -f 2 | rev)

		continue
	end

	# Fix nicks
	set nick (string trim -c '<>' -- $nick)

	# Ignore nicks
	# TODO: Make the match safer
	if string match -q -- $nick $ignored
		continue
	end

	# Website title
	if string match -q -r -- 'http[s]://.*' $msg
		checksetting http or continue

		set url (string match -r -- 'http[s]://[^ "()<>]*' $msg)
		set title (curl -L -s $url | string match -r '(?<=<title>).*(?=</title>)' | perl -MHTML::Entities -pe 'decode_entities($_);')

		if test $title
			if test (string match -r -i -- '/b/|/hm/|/gif/|anal|dildo|gore|hentai|lewd|nude|nsfw|penis|porn|pussy|sex|vagina|yaoi|yuri|loli|shota' "$msg $title")
				echoii "["$c1ii"NSFW$fgii] $title"
			else
				echoii $title
			end
		end

		continue
	end

	# Feels
	# TODO: Fix empty feels
	if string match -q -r -- '^tfw *|^>tfw *' $msg
		if string match -q -r -- '^tfw *' $msg
			set msg ">$msg"
		end

		echo "3$msg" >>$configdir/feel

		continue
	end

	# Check if command
	if string match -q -r -- '^.*' $msg
		switch $msg
			case .about
				set hostname (hostname)
				set crux (crux)
				if test -z $crux
					set distro (grep PRETTY_NAME /etc/*-release | cut -d '"' -f 2)
				else
					set distro $crux
				end

				echoii "Hosted by $USER@$hostname, running $distro~"
				echoii https://github.com/onodera-punpun/punyama

			case .bots
				echoii 'All hail to the dear leader~ [fish]'

			case .source
				echoii https://github.com/onodera-punpun/punyama


			case .ded
				checksetting ded or continue

				echoii 'I\'m still here~'

			case .feel
				checksetting feel or continue

				echoii (cat $configdir/feel | shuf -n 1)

			case .ping
				checksetting ping or continue

				echoii pong~

			case .r8
				checksetting r8 or continue

				echoii (r8)

			case ".spurdo *" .spurdo
				checksetting spurdo or continue

				if test (echo $msg | wc -w) -eq 1
					set fix (cat $botdir/ii/$server/$activechannel/out | tail -n 2 | head -n 1 | cut -d ' ' -f 4- | spurdo)
				else if test (echo $msg | wc -w) -eq 2
					set fix (cat $botdir/ii/$server/$activechannel/out | tail -n 2 | string match -r ':[0-9][0-9] <'(echo $msg | cut -d ' ' -f 2)'>' | head -n 1 | cut -d ' ' -f 4- | spurdo)

					if test -z (echo $fix | cut -d ' ' -f 1)
						set fix (echo $msg | cut -d ' ' -f 2- | spurdo)
					else
						set nick (echo $msg | cut -d ' ' -f 2)
					end
				else
					set fix (echo $msg | cut -d ' ' -f 2- | spurdo)
				end

				echoii "<$nick> $fix"

			case .takbir
				checksetting takbir or continue

				echoii 'ALLAHU AKHBAR~'


			case ".grep *"
				checksetting grep or continue

				set query (echo $msg | cut -d ' ' -f 2-)

				set IFS
				set result (grep -v "<$botnick>" $botdir/ii/$server/$activechannel/out | grep -v "\-!\-" | grep -v "> \." | cut -d \  -f 3- | grep -i $query)
				set count (echo $result | wc -l)

				# If more than 3 results, upload, else echo
				if test $count -ge 3
					echo $result >/tmp/grep.txt
					set url (punf -q /tmp/grep.txt)

					echoii "$count results: $url"
				else if test -z $result
					echoii 'No results~'
				else
					echoii $result
				end
				set IFS \n\ \t

			case ".replace *"
				checksetting replace or continue

				# TODO: Use string match here?
				if test (echo $msg | grep -o "^s/.*/.*/...*")
					set before (echo $msg | cut -d '/' -f 2)
					set after (echo $msg | cut -d '/' -f 3)
					set nick (echo $msg | cut -d '/' -f 4)

					set match (tac $botdir/ii/$server/$activechannel/out | cut -d \n -f 2- | grep ":[0-9][0-9] <$nick>" | cut -d \  -f 4- | grep -v ":[0-9][0-9] <$botnick>" | grep $before | head -n 1)

					# TODO: Use -r here?
					if string match -q -- $before $match
						set fix (echo $match | sed "s/$before/$after/g")
					else
						continue
					end
				else
					set before (echo $msg | cut -d / -f 2)
					set after (echo $msg | cut -d / -f 3)
					set target (echo $msg | cut -d / -f 4)

					set match (tac $botdir/ii/$server/$activechannel/out | cut -d \n -f 2- | grep ":[0-9][0-9] <$nick>" | cut -d \  -f 4- | grep -v ":[0-9][0-9] <$botnick>" | grep $before | head -n 1)

					if test (echo $match | grep $before)
						set fix (echo $match | sed "s/$before/$after/$target")
					else
						continue
					end
				end

				if test $fix
					if test (echo $fix | wc -m) -le (math (echo $msg | wc -m) + 20) -o (echo $fix | wc -m) -ge (math (echo $msg | wc -m) + 20)
						echoii "<$nick> $fix"
					else
						echoii 'Don\'t abuse me pls~'
					end
				end
		end
	end
end
